name: build

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [master]

jobs:
  tests:
    # Ubuntu 20.04 has Python 3.8
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ '3.8.11' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      #- name: Unshallow
      #  run: git fetch --prune --unshallow

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # - name: Cache packages
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/go/pkg/mod
      #       ~/.cache/go-build
      #       vendor
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-
      
      - name: Install 
        run: pip install pipenv
      
      - name: Run tests
        run: make test

      - name: Publish test coverage to coverage site 
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          name: dbldatagen
          verbose: true